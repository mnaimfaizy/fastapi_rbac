# Docker Compose for Local Development Environment
# This configuration is optimized for development with hot-reload and debugging features

include:
  - path: ./backend/docker-compose.dev.yml
  - path: ./react-frontend/docker-compose.dev.yml

services:
  # Mail testing service for development
  mailhog_dev:
    image: mailhog/mailhog:latest
    container_name: fastapi_rbac_mailhog_dev
    ports:
      - "1025:1025"
      - "8025:8025" # Web UI
    restart: unless-stopped
    networks:
      - fastapi_rbac_dev_network
  # PostgreSQL Database for development
  fastapi_rbac_db_dev:
    image: bitnami/postgresql:15
    restart: always
    container_name: fastapi_rbac_db_dev
    ports:
      - "5433:5432" # Different port to avoid conflicts
    env_file:
      - ./backend/.env.development
    environment:
      - POSTGRESQL_USERNAME=${DATABASE_USER:-postgres}
      - POSTGRESQL_PASSWORD=${DATABASE_PASSWORD:-postgres}
      - POSTGRESQL_DATABASE=${DATABASE_NAME:-fastapi_dev_db}
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD:-admin}
      - ALLOW_EMPTY_PASSWORD=yes
    user: root
    volumes:
      - fastapi_rbac_db_dev_data:/bitnami/postgresql
      - ./scripts/database/create-dbs.sql:/docker-entrypoint-initdb.d/create-dbs.sql
    expose:
      - 5432
    networks:
      - fastapi_rbac_dev_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PgAdmin for development
  fastapi_rbac_pgadmin_dev:
    image: dpage/pgadmin4:latest
    container_name: fastapi_rbac_pgadmin_dev
    restart: always
    ports:
      - "8080:80" # Different port for dev
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD:-admin}
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    volumes:
      - fastapi_rbac_pgadmin_dev_data:/var/lib/pgadmin
    networks:
      - fastapi_rbac_dev_network
    depends_on:
      fastapi_rbac_db_dev:
        condition: service_healthy
  # Redis for development
  fastapi_rbac_redis_dev:
    image: redis:7-alpine
    container_name: fastapi_rbac_redis_dev
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - fastapi_rbac_redis_dev_data:/data
    expose:
      - 6379
    networks:
      - fastapi_rbac_dev_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

volumes:
  fastapi_rbac_db_dev_data:
    name: fastapi_rbac_db_dev_data
  fastapi_rbac_pgadmin_dev_data:
    name: fastapi_rbac_pgadmin_dev_data
  fastapi_rbac_redis_dev_data:
    name: fastapi_rbac_redis_dev_data

networks:
  fastapi_rbac_dev_network:
    name: fastapi_rbac_dev_network
    driver: bridge
