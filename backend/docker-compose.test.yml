# Backend Test Environment
# This compose file contains backend services for testing

services:
  # FastAPI Backend Application for testing
  fastapi_rbac_test:
    build:
      context: .
      dockerfile: Dockerfile
      target: testing
      args:
        - NODE_ENV=testing
        - ENVIRONMENT=testing
    image: fastapi_rbac:test
    restart: always
    container_name: fastapi_rbac_test
    ports:
      - "8002:8000" # Different port for test environment
    env_file:
      - .env.test
    environment:
      - MODE=testing
      - DATABASE_HOST=fastapi_rbac_db_test
      - DATABASE_PORT=5432
      - REDIS_HOST=fastapi_rbac_redis_test
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://fastapi_rbac_redis_test:6379/0
      - CELERY_RESULT_BACKEND=redis://fastapi_rbac_redis_test:6379/0
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    depends_on:
      fastapi_rbac_db_test:
        condition: service_healthy
      fastapi_rbac_redis_test:
        condition: service_healthy
    networks:
      - fastapi_rbac_test_network
  # Celery Worker for background tasks in test environment
  fastapi_rbac_worker_test:
    build:
      context: .
      dockerfile: Dockerfile
      target: testing
      args:
        - NODE_ENV=testing
        - ENVIRONMENT=testing
    image: fastapi_rbac_worker:test
    restart: always
    container_name: fastapi_rbac_worker_test
    command: celery -A app.celery_app worker --loglevel=info
    env_file:
      - .env.test
    environment:
      - MODE=testing
      - DATABASE_HOST=fastapi_rbac_db_test
      - DATABASE_PORT=5432
      - REDIS_HOST=fastapi_rbac_redis_test
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://fastapi_rbac_redis_test:6379/0
      - CELERY_RESULT_BACKEND=redis://fastapi_rbac_redis_test:6379/0
    volumes:
      - .:/app
    depends_on:
      fastapi_rbac_db_test:
        condition: service_healthy
      fastapi_rbac_redis_test:
        condition: service_healthy
    networks:
      - fastapi_rbac_test_network
  # Celery Beat Scheduler for periodic tasks in test environment
  fastapi_rbac_beat_test:
    build:
      context: .
      dockerfile: Dockerfile
      target: testing
      args:
        - NODE_ENV=testing
        - ENVIRONMENT=testing
    image: fastapi_rbac_worker:test
    restart: always
    container_name: fastapi_rbac_beat_test
    command: celery -A app.celery_app beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    env_file:
      - .env.test
    environment:
      - MODE=testing
      - DATABASE_HOST=fastapi_rbac_db_test
      - DATABASE_PORT=5432
      - REDIS_HOST=fastapi_rbac_redis_test
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://fastapi_rbac_redis_test:6379/0
      - CELERY_RESULT_BACKEND=redis://fastapi_rbac_redis_test:6379/0
    volumes:
      - .:/app
    depends_on:
      fastapi_rbac_db_test:
        condition: service_healthy
      fastapi_rbac_redis_test:
        condition: service_healthy
    networks:
      - fastapi_rbac_test_network
  # Test Runner for integration tests (runs pytest and exits)
  fastapi_rbac_test_runner:
    build:
      context: .
      dockerfile: Dockerfile
      target: testing
      args:
        - NODE_ENV=testing
        - ENVIRONMENT=testing
    image: fastapi_rbac:test
    container_name: fastapi_rbac_test_runner
    env_file:
      - .env.test
    environment:
      - MODE=testing
      - DATABASE_HOST=fastapi_rbac_db_test
      - DATABASE_PORT=5432
      - REDIS_HOST=fastapi_rbac_redis_test
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://fastapi_rbac_redis_test:6379/0
      - CELERY_RESULT_BACKEND=redis://fastapi_rbac_redis_test:6379/0
      - TEST_PATH=${TEST_PATH}
    volumes:
      - .:/app
    depends_on:
      fastapi_rbac_db_test:
        condition: service_healthy
      fastapi_rbac_redis_test:
        condition: service_healthy
    networks:
      - fastapi_rbac_test_network
    entrypoint: ["/bin/bash", "/app/scripts/testing-entrypoint.sh"]

  # PostgreSQL Database for testing
  fastapi_rbac_db_test:
    image: postgres:15-alpine
    restart: always
    container_name: fastapi_rbac_db_test
    ports:
      - "5435:5432" # Different port for test environment
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=fastapi_rbac_test
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d fastapi_rbac_test"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - fastapi_rbac_test_network

  # Redis Cache for testing
  fastapi_rbac_redis_test:
    image: redis:7-alpine
    restart: always
    container_name: fastapi_rbac_redis_test
    ports:
      - "6381:6379" # Different port for test environment
    command: redis-server --appendonly yes
    volumes:
      - redis_test_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - fastapi_rbac_test_network

  # PgAdmin for database management in test environment
  fastapi_rbac_pgadmin_test:
    image: dpage/pgadmin4:latest
    restart: always
    container_name: fastapi_rbac_pgadmin_test
    ports:
      - "8082:80" # Different port for test environment
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_CONFIG_SERVER_MODE=False
    volumes:
      - pgadmin_test_data:/var/lib/pgadmin
      - ../pgadmin/servers.json:/pgadmin4/servers.json
    depends_on:
      fastapi_rbac_db_test:
        condition: service_healthy
    networks:
      - fastapi_rbac_test_network

  # MailHog for email testing in test environment
  fastapi_rbac_mailhog_test:
    image: mailhog/mailhog:latest
    restart: always
    container_name: fastapi_rbac_mailhog_test
    ports:
      - "1026:1025" # SMTP port - Different for test
      - "8027:8025" # Web UI port - Different for test
    networks:
      - fastapi_rbac_test_network
  # Flower for monitoring Celery tasks in test environment
  fastapi_rbac_flower_test:
    build:
      context: .
      dockerfile: Dockerfile
      target: testing
      args:
        - NODE_ENV=testing
        - ENVIRONMENT=testing
    image: fastapi_rbac_worker:test
    restart: always
    container_name: fastapi_rbac_flower_test
    command: celery -A app.celery_app flower --port=5555
    ports:
      - "5557:5555" # Different port for test environment
    env_file:
      - .env.test
    environment:
      - MODE=testing
      - DATABASE_HOST=fastapi_rbac_db_test
      - DATABASE_PORT=5432
      - REDIS_HOST=fastapi_rbac_redis_test
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://fastapi_rbac_redis_test:6379/0
      - CELERY_RESULT_BACKEND=redis://fastapi_rbac_redis_test:6379/0
    volumes:
      - .:/app
    depends_on:
      fastapi_rbac_redis_test:
        condition: service_healthy
    networks:
      - fastapi_rbac_test_network

# Docker volumes for test environment
volumes:
  postgres_test_data:
    name: fastapi_rbac_postgres_test_data
  redis_test_data:
    name: fastapi_rbac_redis_test_data
  pgadmin_test_data:
    name: fastapi_rbac_pgadmin_test_data

# Docker network for test environment
networks:
  fastapi_rbac_test_network:
    name: fastapi_rbac_test_network
    driver: bridge
