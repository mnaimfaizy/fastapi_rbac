"""comprehensive_schema_alignment

Revision ID: 8ba4877e61a2
Revises: 17a6c5744ad5
Create Date: 2025-06-03 18:40:26.729253

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import sqlite

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "8ba4877e61a2"
down_revision: Union[str, None] = "17a6c5744ad5"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("AuditLog", schema=None) as batch_op:
        batch_op.drop_index("ix_audit_log_actor_id")
        batch_op.drop_index("ix_audit_log_resource_type")
        batch_op.drop_index("ix_audit_log_timestamp")

    op.drop_table("AuditLog")
    with op.batch_alter_table("Permission", schema=None) as batch_op:
        batch_op.alter_column("name", existing_type=sa.VARCHAR(), nullable=False)
        batch_op.alter_column(
            "group_id",
            existing_type=sa.VARCHAR(length=36),
            type_=sa.Uuid(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "id",
            existing_type=sa.VARCHAR(length=36),
            type_=sa.Uuid(),
            existing_nullable=False,
        )
        batch_op.alter_column("updated_at", existing_type=sa.DATETIME(), nullable=False)
        batch_op.alter_column("created_at", existing_type=sa.DATETIME(), nullable=False)
        batch_op.alter_column(
            "created_by_id",
            existing_type=sa.VARCHAR(length=36),
            type_=sa.Uuid(),
            existing_nullable=True,
        )
        batch_op.drop_index("ix_Permission_description")
        batch_op.drop_index("ix_Permission_name")
        batch_op.create_index(batch_op.f("ix_Permission_name"), ["name"], unique=True)

    with op.batch_alter_table("PermissionGroup", schema=None) as batch_op:
        batch_op.alter_column(
            "id",
            existing_type=sa.VARCHAR(length=36),
            type_=sa.Uuid(),
            existing_nullable=False,
        )
        batch_op.alter_column("updated_at", existing_type=sa.DATETIME(), nullable=False)
        batch_op.alter_column("created_at", existing_type=sa.DATETIME(), nullable=False)
        batch_op.alter_column(
            "created_by_id",
            existing_type=sa.VARCHAR(length=36),
            type_=sa.Uuid(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "permission_group_id",
            existing_type=sa.VARCHAR(length=36),
            type_=sa.Uuid(),
            existing_nullable=True,
        )

    with op.batch_alter_table("Role", schema=None) as batch_op:
        batch_op.alter_column(
            "id",
            existing_type=sa.VARCHAR(length=36),
            type_=sa.Uuid(),
            existing_nullable=False,
        )
        batch_op.alter_column("updated_at", existing_type=sa.DATETIME(), nullable=False)
        batch_op.alter_column("created_at", existing_type=sa.DATETIME(), nullable=False)
        batch_op.alter_column(
            "role_group_id",
            existing_type=sa.NUMERIC(),
            type_=sa.Uuid(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "created_by_id",
            existing_type=sa.VARCHAR(length=36),
            type_=sa.Uuid(),
            existing_nullable=True,
        )

    with op.batch_alter_table("RoleGroup", schema=None) as batch_op:
        batch_op.alter_column(
            "id",
            existing_type=sa.VARCHAR(length=36),
            type_=sa.Uuid(),
            existing_nullable=False,
        )
        batch_op.alter_column("updated_at", existing_type=sa.DATETIME(), nullable=False)
        batch_op.alter_column("created_at", existing_type=sa.DATETIME(), nullable=False)
        batch_op.alter_column(
            "created_by_id",
            existing_type=sa.VARCHAR(length=36),
            type_=sa.Uuid(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "parent_id",
            existing_type=sa.VARCHAR(length=36),
            type_=sa.Uuid(),
            existing_nullable=True,
        )
        batch_op.drop_index("ix_RoleGroup_parent_id")

    with op.batch_alter_table("RoleGroupMap", schema=None) as batch_op:
        batch_op.alter_column(
            "role_group_id",
            existing_type=sa.NUMERIC(),
            type_=sa.Uuid(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "role_id",
            existing_type=sa.NUMERIC(),
            type_=sa.Uuid(),
            existing_nullable=False,
        )
        batch_op.drop_index("ix_role_group_map_role_group_id")
        batch_op.drop_index("ix_role_group_map_role_id")
        batch_op.create_index(
            batch_op.f("ix_RoleGroupMap_role_group_id"), ["role_group_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_RoleGroupMap_role_id"), ["role_id"], unique=False
        )

    with op.batch_alter_table("RolePermission", schema=None) as batch_op:
        batch_op.alter_column(
            "id",
            existing_type=sa.VARCHAR(length=36),
            type_=sa.Uuid(),
            existing_nullable=False,
        )
        batch_op.alter_column("updated_at", existing_type=sa.DATETIME(), nullable=False)
        batch_op.alter_column("created_at", existing_type=sa.DATETIME(), nullable=False)
        batch_op.alter_column(
            "role_id",
            existing_type=sa.VARCHAR(length=36),
            type_=sa.Uuid(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "permission_id",
            existing_type=sa.VARCHAR(length=36),
            type_=sa.Uuid(),
            existing_nullable=False,
        )

    with op.batch_alter_table("User", schema=None) as batch_op:
        batch_op.alter_column(
            "id",
            existing_type=sa.VARCHAR(length=36),
            type_=sa.Uuid(),
            existing_nullable=False,
        )
        batch_op.alter_column("updated_at", existing_type=sa.DATETIME(), nullable=False)
        batch_op.alter_column("created_at", existing_type=sa.DATETIME(), nullable=False)
        batch_op.alter_column("password", existing_type=sa.VARCHAR(), nullable=True)

    with op.batch_alter_table("UserPasswordHistory", schema=None) as batch_op:
        batch_op.alter_column(
            "user_id",
            existing_type=sa.VARCHAR(length=36),
            type_=sa.Uuid(),
            existing_nullable=False,
        )
        batch_op.alter_column("created_at", existing_type=sa.DATETIME(), nullable=False)
        batch_op.alter_column(
            "reset_token_id",
            existing_type=sa.VARCHAR(length=36),
            type_=sa.Uuid(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "id",
            existing_type=sa.VARCHAR(length=36),
            type_=sa.Uuid(),
            existing_nullable=False,
        )
        batch_op.alter_column("updated_at", existing_type=sa.DATETIME(), nullable=False)
        batch_op.drop_index("ix_UserPasswordHistory_created_at")
        batch_op.create_index(
            batch_op.f("ix_UserPasswordHistory_user_id"), ["user_id"], unique=False
        )
        batch_op.drop_column("password")

    with op.batch_alter_table("UserRole", schema=None) as batch_op:
        batch_op.alter_column(
            "id",
            existing_type=sa.VARCHAR(length=36),
            type_=sa.Uuid(),
            existing_nullable=False,
        )
        batch_op.alter_column("updated_at", existing_type=sa.DATETIME(), nullable=False)
        batch_op.alter_column("created_at", existing_type=sa.DATETIME(), nullable=False)
        batch_op.alter_column(
            "user_id",
            existing_type=sa.VARCHAR(length=36),
            type_=sa.Uuid(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "role_id",
            existing_type=sa.VARCHAR(length=36),
            type_=sa.Uuid(),
            existing_nullable=False,
        )
        batch_op.drop_index("ix_UserRole_role_id")
        batch_op.drop_index("ix_UserRole_user_id")

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("UserRole", schema=None) as batch_op:
        batch_op.create_index("ix_UserRole_user_id", ["user_id"], unique=False)
        batch_op.create_index("ix_UserRole_role_id", ["role_id"], unique=False)
        batch_op.alter_column(
            "role_id",
            existing_type=sa.Uuid(),
            type_=sa.VARCHAR(length=36),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "user_id",
            existing_type=sa.Uuid(),
            type_=sa.VARCHAR(length=36),
            existing_nullable=False,
        )
        batch_op.alter_column("created_at", existing_type=sa.DATETIME(), nullable=True)
        batch_op.alter_column("updated_at", existing_type=sa.DATETIME(), nullable=True)
        batch_op.alter_column(
            "id",
            existing_type=sa.Uuid(),
            type_=sa.VARCHAR(length=36),
            existing_nullable=False,
        )

    with op.batch_alter_table("UserPasswordHistory", schema=None) as batch_op:
        batch_op.add_column(sa.Column("password", sa.VARCHAR(), nullable=True))
        batch_op.drop_index(batch_op.f("ix_UserPasswordHistory_user_id"))
        batch_op.create_index(
            "ix_UserPasswordHistory_created_at", ["created_at"], unique=False
        )
        batch_op.alter_column("updated_at", existing_type=sa.DATETIME(), nullable=True)
        batch_op.alter_column(
            "id",
            existing_type=sa.Uuid(),
            type_=sa.VARCHAR(length=36),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "reset_token_id",
            existing_type=sa.Uuid(),
            type_=sa.VARCHAR(length=36),
            existing_nullable=True,
        )
        batch_op.alter_column("created_at", existing_type=sa.DATETIME(), nullable=True)
        batch_op.alter_column(
            "user_id",
            existing_type=sa.Uuid(),
            type_=sa.VARCHAR(length=36),
            existing_nullable=False,
        )

    with op.batch_alter_table("User", schema=None) as batch_op:
        batch_op.alter_column("password", existing_type=sa.VARCHAR(), nullable=False)
        batch_op.alter_column("created_at", existing_type=sa.DATETIME(), nullable=True)
        batch_op.alter_column("updated_at", existing_type=sa.DATETIME(), nullable=True)
        batch_op.alter_column(
            "id",
            existing_type=sa.Uuid(),
            type_=sa.VARCHAR(length=36),
            existing_nullable=False,
        )

    with op.batch_alter_table("RolePermission", schema=None) as batch_op:
        batch_op.alter_column(
            "permission_id",
            existing_type=sa.Uuid(),
            type_=sa.VARCHAR(length=36),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "role_id",
            existing_type=sa.Uuid(),
            type_=sa.VARCHAR(length=36),
            existing_nullable=False,
        )
        batch_op.alter_column("created_at", existing_type=sa.DATETIME(), nullable=True)
        batch_op.alter_column("updated_at", existing_type=sa.DATETIME(), nullable=True)
        batch_op.alter_column(
            "id",
            existing_type=sa.Uuid(),
            type_=sa.VARCHAR(length=36),
            existing_nullable=False,
        )

    with op.batch_alter_table("RoleGroupMap", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_RoleGroupMap_role_id"))
        batch_op.drop_index(batch_op.f("ix_RoleGroupMap_role_group_id"))
        batch_op.create_index("ix_role_group_map_role_id", ["role_id"], unique=False)
        batch_op.create_index(
            "ix_role_group_map_role_group_id", ["role_group_id"], unique=False
        )
        batch_op.alter_column(
            "role_id",
            existing_type=sa.Uuid(),
            type_=sa.NUMERIC(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "role_group_id",
            existing_type=sa.Uuid(),
            type_=sa.NUMERIC(),
            existing_nullable=False,
        )

    with op.batch_alter_table("RoleGroup", schema=None) as batch_op:
        batch_op.create_index("ix_RoleGroup_parent_id", ["parent_id"], unique=False)
        batch_op.alter_column(
            "parent_id",
            existing_type=sa.Uuid(),
            type_=sa.VARCHAR(length=36),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "created_by_id",
            existing_type=sa.Uuid(),
            type_=sa.VARCHAR(length=36),
            existing_nullable=True,
        )
        batch_op.alter_column("created_at", existing_type=sa.DATETIME(), nullable=True)
        batch_op.alter_column("updated_at", existing_type=sa.DATETIME(), nullable=True)
        batch_op.alter_column(
            "id",
            existing_type=sa.Uuid(),
            type_=sa.VARCHAR(length=36),
            existing_nullable=False,
        )

    with op.batch_alter_table("Role", schema=None) as batch_op:
        batch_op.alter_column(
            "created_by_id",
            existing_type=sa.Uuid(),
            type_=sa.VARCHAR(length=36),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "role_group_id",
            existing_type=sa.Uuid(),
            type_=sa.NUMERIC(),
            existing_nullable=True,
        )
        batch_op.alter_column("created_at", existing_type=sa.DATETIME(), nullable=True)
        batch_op.alter_column("updated_at", existing_type=sa.DATETIME(), nullable=True)
        batch_op.alter_column(
            "id",
            existing_type=sa.Uuid(),
            type_=sa.VARCHAR(length=36),
            existing_nullable=False,
        )

    with op.batch_alter_table("PermissionGroup", schema=None) as batch_op:
        batch_op.alter_column(
            "permission_group_id",
            existing_type=sa.Uuid(),
            type_=sa.VARCHAR(length=36),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "created_by_id",
            existing_type=sa.Uuid(),
            type_=sa.VARCHAR(length=36),
            existing_nullable=True,
        )
        batch_op.alter_column("created_at", existing_type=sa.DATETIME(), nullable=True)
        batch_op.alter_column("updated_at", existing_type=sa.DATETIME(), nullable=True)
        batch_op.alter_column(
            "id",
            existing_type=sa.Uuid(),
            type_=sa.VARCHAR(length=36),
            existing_nullable=False,
        )

    with op.batch_alter_table("Permission", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_Permission_name"))
        batch_op.create_index("ix_Permission_name", ["name"], unique=False)
        batch_op.create_index(
            "ix_Permission_description", ["description"], unique=False
        )
        batch_op.alter_column(
            "created_by_id",
            existing_type=sa.Uuid(),
            type_=sa.VARCHAR(length=36),
            existing_nullable=True,
        )
        batch_op.alter_column("created_at", existing_type=sa.DATETIME(), nullable=True)
        batch_op.alter_column("updated_at", existing_type=sa.DATETIME(), nullable=True)
        batch_op.alter_column(
            "id",
            existing_type=sa.Uuid(),
            type_=sa.VARCHAR(length=36),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "group_id",
            existing_type=sa.Uuid(),
            type_=sa.VARCHAR(length=36),
            existing_nullable=False,
        )
        batch_op.alter_column("name", existing_type=sa.VARCHAR(), nullable=True)

    op.create_table(
        "AuditLog",
        sa.Column("id", sa.NUMERIC(), nullable=False),
        sa.Column("actor_id", sa.NUMERIC(), nullable=False),
        sa.Column("action", sa.VARCHAR(), nullable=False),
        sa.Column("resource_type", sa.VARCHAR(), nullable=False),
        sa.Column("resource_id", sa.VARCHAR(), nullable=False),
        sa.Column("details", sqlite.JSON(), nullable=True),
        sa.Column("timestamp", sa.DATETIME(), nullable=False),
        sa.ForeignKeyConstraint(
            ["actor_id"],
            ["User.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("AuditLog", schema=None) as batch_op:
        batch_op.create_index("ix_audit_log_timestamp", ["timestamp"], unique=False)
        batch_op.create_index(
            "ix_audit_log_resource_type", ["resource_type"], unique=False
        )
        batch_op.create_index("ix_audit_log_actor_id", ["actor_id"], unique=False)

    # ### end Alembic commands ###
