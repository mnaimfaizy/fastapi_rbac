#############################################
# FastAPI RBAC Environment Configuration
#
# This file contains all environment variables needed for both
# development and production environments.
#
# For DEVELOPMENT:
# - Use values as provided (development-friendly defaults)
# - Copy to .env.local for local overrides
#
# For PRODUCTION:
# - Copy to .env and update all security-critical values
# - See production deployment section below for required changes
#############################################

#############################################
# Application Configuration
#############################################
# Environment mode - CHANGE FOR PRODUCTION
MODE=development
# MODE=production  # <-- Use this for production

# API Configuration
# API_VERSION=v1 (Handled by config.py default)
# API_V1_STR=/api/v1 (Handled by config.py default)
PROJECT_NAME=fastapi-rbac
# PROJECT_NAME=fastapi-rbac  # <-- Same for production

# Debug and Logging - CHANGE FOR PRODUCTION
DEBUG=true
# DEBUG=false  # <-- Use this for production
LOG_LEVEL=DEBUG
# LOG_LEVEL=INFO  # <-- Use this for production

# Registration Settings - CHANGE FOR PRODUCTION
USERS_OPEN_REGISTRATION=true
# USERS_OPEN_REGISTRATION=false  # <-- Use this for production

# Frontend URL - CHANGE FOR PRODUCTION
FRONTEND_URL=http://localhost:3000
# FRONTEND_URL=https://your-production-domain.com  # <-- Use this for production

# CORS Origins - CHANGE FOR PRODUCTION
BACKEND_CORS_ORIGINS=["*"]
# BACKEND_CORS_ORIGINS=["https://your-production-domain.com"]  # <-- Use this for production

#############################################
# Security Keys - MUST CHANGE FOR PRODUCTION
# Generate new keys for production using:
# python -c "import secrets; print(secrets.token_urlsafe(32))"
#############################################
SECRET_KEY=s9JVOshell3UZ4frL1hlQ7V9LiLGRGkwYroa2WxcEQLl4BcLXrgmma5fRROXMYa3
JWT_SECRET_KEY=your_jwt_secret_key_here
JWT_REFRESH_SECRET_KEY=iYfWj8oCqXcuzFDLuV7RJdeAQYjG7jwhTra9kkFmxQ0T99nu76P_TVtN21eisIqj1VtgvVOBLKXD24CGU4Tv-A
JWT_RESET_SECRET_KEY=s9JVOshell3UZ4frL1hlQ7V9LiLGRGkwYroa2WxcEQLl4BcLXrgmma5fRROXMYa3
JWT_VERIFICATION_SECRET_KEY=s9JVOshell3UZ4frL1hlQ7V9LiLGRGkwYroa2WxcEQLl4BcLXrgmma5fRROXMYa3
ENCRYPT_KEY=UIEhd2CCUoTRt6qNiDWA9mO57IdaLwcefGkDIf9WKFU=
ALGORITHM=HS256
TOKEN_ISSUER=fastapi_rbac
TOKEN_AUDIENCE=fastapi_rbac_users
USER_CHANGED_PASSWORD_DATE=2025-04-20

#############################################
# Token Configuration
#############################################
# Development settings (longer tokens for convenience)
ACCESS_TOKEN_EXPIRE_MINUTES=60
# ACCESS_TOKEN_EXPIRE_MINUTES=15  # <-- Use this for production (shorter for security)

REFRESH_TOKEN_EXPIRE_MINUTES=144000  # 100 days
# REFRESH_TOKEN_EXPIRE_MINUTES=10080  # 7 days <-- Use this for production

REFRESH_TOKEN_EXPIRE_DAYS=7
PASSWORD_RESET_TOKEN_EXPIRE_MINUTES=30
VERIFICATION_TOKEN_EXPIRE_MINUTES=1440  # 24 hours
UNVERIFIED_ACCOUNT_CLEANUP_HOURS=72
MAX_LOGIN_ATTEMPTS=5
LOCKOUT_DURATION_MINUTES=15
PASSWORD_HISTORY_SIZE=5
PREVENT_PASSWORD_REUSE=5

#############################################
# Database Configuration
#############################################
# Development: SQLite (default)
DATABASE_TYPE=sqlite
SQLITE_DB_PATH=app_dev.db

# Production: PostgreSQL (uncomment and configure for production)
# DATABASE_TYPE=postgresql

# Standard PostgreSQL Configuration
DATABASE_HOST=fastapi_rbac_db
DATABASE_USER=postgres
DATABASE_PASSWORD=postgres
DATABASE_NAME=fastapi_db
DATABASE_CELERY_NAME=celery_schedule_jobs
DATABASE_PORT=5432
DB_POOL_SIZE=83
# DB_POOL_SIZE=50  # <-- Use this for production
WEB_CONCURRENCY=9
# WEB_CONCURRENCY=4  # <-- Use this for production

# Production PostgreSQL/Supabase Configuration
# Uncomment and configure for production:
# POSTGRES_URL="your-postgresql-connection-string"
# POSTGRES_PRISMA_URL="your-prisma-connection-string"
# POSTGRES_URL_NON_POOLING="your-non-pooling-connection-string"

# Supabase Configuration (if using Supabase)
# SUPABASE_URL="your-supabase-project-url"
# SUPABASE_JWT_SECRET="your-supabase-jwt-secret"
# SUPABASE_SERVICE_ROLE_KEY="your-supabase-service-role-key"
# SUPABASE_ANON_KEY="your-supabase-anon-key"

#############################################
# Redis Configuration
#############################################
# Development settings
REDIS_HOST=fastapi_rbac_redis_server
REDIS_PORT=6379
REDIS_PASSWORD=  # Optional: set if your Redis requires a password
REDIS_SSL=false

# Production settings (uncomment and configure for production)
# REDIS_HOST=production_redis_host
# REDIS_PASSWORD=strong_production_redis_password  # <-- Required for production
# REDIS_SSL=true  # <-- Enable for production

#############################################
# Email Configuration
#############################################
EMAILS_ENABLED=true
EMAILS_FROM_EMAIL=info@fastapi-rbac.com
EMAILS_FROM_NAME=FastAPI RBAC
EMAIL_VERIFICATION_URL=http://localhost:5173/verify-email
# EMAIL_VERIFICATION_URL=https://your-production-domain.com/verify-email  # <-- Use this for production

# Development: MailHog (for testing)
SMTP_HOST=mailhog
SMTP_PORT=1025
SMTP_TLS=false
SMTP_USER=
SMTP_PASSWORD=

# Production: Real SMTP (uncomment and configure for production)
# SMTP_HOST=smtp.production-mail-server.com
# SMTP_PORT=587
# SMTP_TLS=true
# SMTP_USER=your-production-email@example.com
# SMTP_PASSWORD=your-production-email-password
# EMAILS_FROM_EMAIL=no-reply@your-domain.com

#############################################
# Admin User Configuration
#############################################
# Development superuser
FIRST_SUPERUSER_EMAIL=admin@admin.com
FIRST_SUPERUSER_PASSWORD=admin
# FIRST_SUPERUSER_EMAIL=admin@yourdomain.com  # <-- Use this for production
# FIRST_SUPERUSER_PASSWORD=a_very_strong_password_for_superuser  # <-- Use this for production

# Admin-created user settings
ADMIN_CREATED_USERS_AUTO_VERIFIED=true
ADMIN_CREATED_USERS_SEND_EMAIL=false

#############################################
# PgAdmin Configuration (Optional)
#############################################
PGADMIN_DEFAULT_EMAIL=admin@example.com
PGADMIN_DEFAULT_PASSWORD=admin
# PGADMIN_DEFAULT_PASSWORD=your_pgadmin_password  # <-- Change for production

#############################################
# Email Verification Settings
#############################################
EMAIL_VERIFICATION_TOKEN_EXPIRE_MINUTES=10080  # 7 days
# EMAIL_VERIFICATION_URL is derived from FRONTEND_URL in config.py

#############################################
# Account Security Settings
#############################################
ENABLE_ACCOUNT_LOCKOUT=true
ACCOUNT_LOCKOUT_MINUTES=1440  # 24 hours
# ACCOUNT_LOCKOUT_MINUTES=30  # <-- Use this for production (shorter lockout)

MAX_PASSWORD_CHANGE_ATTEMPTS=3
ACCOUNT_LOCKOUT_DURATION=1800  # 30 minutes
REQUIRE_PASSWORD_CHANGE_DAYS=90
ENABLE_BRUTE_FORCE_PROTECTION=true
BRUTE_FORCE_TIME_WINDOW=3600  # 1 hour
PASSWORD_MIN_AGE_HOURS=24
LOGIN_HISTORY_DAYS=90

#############################################
# Registration Security Settings
#############################################
MAX_REGISTRATION_ATTEMPTS_PER_HOUR=5
MAX_REGISTRATION_ATTEMPTS_PER_EMAIL=3
UNVERIFIED_ACCOUNT_CLEANUP_DELAY_HOURS=24
EMAIL_DOMAIN_BLACKLIST=[]  # Example: ["tempmail.com", "blocked.org"]
EMAIL_DOMAIN_ALLOWLIST=[]  # Example: ["allowed.com", "example.net"] (Empty means all allowed)

#############################################
# Password Security Settings
#############################################
PASSWORD_MIN_LENGTH=12
PASSWORD_MAX_LENGTH=128
PASSWORD_REQUIRE_UPPERCASE=true
PASSWORD_REQUIRE_LOWERCASE=true
PASSWORD_REQUIRE_DIGITS=true
PASSWORD_REQUIRE_SPECIAL=true
PASSWORD_SPECIAL_CHARS="!@#$%^&*()_+-=[]{}|;:,.<>?"
PASSWORD_HASHING_ITERATIONS=12
# PASSWORD_HASHING_ITERATIONS=13  # <-- Use this for production (higher security)

PASSWORD_PREVENT_REUSE=true
PREVENT_COMMON_PASSWORDS=true
PREVENT_SEQUENTIAL_CHARS=true
PREVENT_REPEATED_CHARS=true
PASSWORD_PEPPER=  # Optional: add a secret pepper string for production

#############################################
# Session Security
#############################################
SESSION_MAX_AGE=3600  # 1 hour
SESSION_EXTEND_ON_ACTIVITY=true
REQUIRE_MFA_AFTER_INACTIVITY=true
INACTIVITY_TIMEOUT=1800  # 30 minutes
CONCURRENT_SESSION_LIMIT=5

#############################################
# Celery Configuration
#############################################
# Development: Simple Redis connection
CELERY_BROKER_URL=redis://${REDIS_HOST}:${REDIS_PORT}/0
CELERY_RESULT_BACKEND=redis://${REDIS_HOST}:${REDIS_PORT}/0

# Production: SSL-enabled Redis connection (uncomment for production)
# CELERY_BROKER_URL=rediss://:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}/0
# CELERY_RESULT_BACKEND=rediss://:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}/0

# Serialization Settings
CELERY_TASK_SERIALIZER=json
CELERY_RESULT_SERIALIZER=json
CELERY_ACCEPT_CONTENT=["json"]
CELERY_TIMEZONE=UTC

# Development: Immediate execution
CELERY_TASK_TIME_LIMIT=300  # 5 minutes
CELERY_TASK_SOFT_TIME_LIMIT=60  # 1 minute
CELERY_WORKER_PREFETCH_MULTIPLIER=1
CELERY_TASK_ALWAYS_EAGER=true
CELERY_TASK_EAGER_PROPAGATES=true

# Production: Optimized execution (uncomment for production)
# CELERY_TASK_TIME_LIMIT=1800  # 30 minutes
# CELERY_TASK_SOFT_TIME_LIMIT=900  # 15 minutes
# CELERY_WORKER_PREFETCH_MULTIPLIER=4
# CELERY_TASK_ALWAYS_EAGER=false
# CELERY_TASK_EAGER_PROPAGATES=false

# Beat Settings
CELERY_BEAT_SCHEDULER=django_celery_beat.schedulers:DatabaseScheduler
CELERY_BEAT_MAX_LOOP_INTERVAL=5

# Queue Settings
CELERY_TASK_DEFAULT_QUEUE=default
CELERY_TASK_DEFAULT_EXCHANGE=default
CELERY_TASK_DEFAULT_ROUTING_KEY=default

# Error Handling and Retry Settings
CELERY_TASK_ACKS_LATE=true
CELERY_TASK_REJECT_ON_WORKER_LOST=true
CELERY_TASK_DEFAULT_RETRY_DELAY=180
CELERY_TASK_MAX_RETRIES=3

# Monitoring Settings
CELERY_TASK_TRACK_STARTED=true
CELERY_TASK_SEND_SENT_EVENT=true
CELERY_WORKER_SEND_TASK_EVENTS=true

# Production Security Settings (uncomment for production)
# CELERY_BROKER_USE_SSL=true
# CELERY_REDIS_BACKEND_USE_SSL=true
# CELERY_TASK_DEFAULT_RATE_LIMIT=10000/m
# CELERY_WORKER_MAX_TASKS_PER_CHILD=1000
# CELERY_WORKER_CONCURRENCY=8
# CELERY_WORKER_MAX_MEMORY_PER_CHILD=400000  # 400MB
# CELERY_BROKER_POOL_LIMIT=100
# CELERY_TASK_COMPRESSION=gzip

#############################################
# Rate Limiting Configuration
#############################################
MAX_VERIFICATION_ATTEMPTS_PER_HOUR=5
VERIFICATION_COOLDOWN_SECONDS=300  # 5 minutes
RATE_LIMIT_PERIOD_SECONDS=3600  # 1 hour

# Rate Limiting for Resend Verification Email
MAX_RESEND_VERIFICATION_ATTEMPTS_PER_HOUR=3
RATE_LIMIT_PERIOD_RESEND_VERIFICATION_SECONDS=3600

#############################################
# Advanced Token Security
#############################################
ACCESS_TOKEN_ENTROPY_BITS=256
VERIFY_TOKEN_ON_EVERY_REQUEST=true
TOKEN_VERSION_ON_PASSWORD_CHANGE=true
VALIDATE_TOKEN_IP=true  # Consider implications if users have dynamic IPs
TOKEN_BLACKLIST_ON_LOGOUT=true
TOKEN_BLACKLIST_EXPIRY=86400  # 24 hours

#############################################
# PRODUCTION DEPLOYMENT CHECKLIST
#############################################
# Before deploying to production, ensure you:
#
# 1. SECURITY KEYS:
#    - Generate new SECRET_KEY, JWT_SECRET_KEY, and other security keys
#    - Use: python -c "import secrets; print(secrets.token_urlsafe(32))"
#
# 2. ENVIRONMENT SETTINGS:
#    - Set MODE=production
#    - Set DEBUG=false
#    - Set LOG_LEVEL=INFO
#    - Set USERS_OPEN_REGISTRATION=false
#
# 3. DATABASE:
#    - Configure DATABASE_TYPE=postgresql
#    - Set up production PostgreSQL/Supabase credentials
#    - Update connection strings and passwords
#
# 4. REDIS:
#    - Configure production Redis host and password
#    - Enable SSL (REDIS_SSL=true)
#    - Update Celery URLs to use SSL (rediss://)
#
# 5. EMAIL:
#    - Configure production SMTP settings
#    - Update email addresses and credentials
#
# 6. SECURITY:
#    - Update CORS origins to your production domain
#    - Set strong passwords for admin users
#    - Configure PASSWORD_PEPPER for additional security
#
# 7. PERFORMANCE:
#    - Adjust worker concurrency and pool sizes
#    - Enable Celery production optimizations
#    - Configure appropriate timeouts
#
# 8. MONITORING:
#    - Set up proper logging and monitoring
#    - Configure error tracking
#    - Set up health checks
#############################################
