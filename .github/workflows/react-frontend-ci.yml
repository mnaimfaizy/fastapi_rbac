name: React Frontend CI

on:
  push:
    branches: [main]
    paths:
      - "react-frontend/**"
      - ".github/workflows/react-frontend-ci.yml" # Trigger if this workflow file changes
  pull_request:
    branches: [main]
    paths:
      - "react-frontend/**"
      - ".github/workflows/react-frontend-ci.yml" # Trigger if this workflow file changes

defaults:
  run:
    working-directory: ./react-frontend

jobs:
  install_dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: react-frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Upload node_modules
        uses: actions/upload-artifact@v4
        with:
          name: node-modules-${{ matrix.node-version }}
          path: react-frontend/node_modules # Path relative to workspace root
          retention-days: 1

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: install_dependencies
    strategy:
      matrix:
        node-version: [20.x] # Should match install_dependencies
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: react-frontend/package-lock.json

      - name: Download node_modules
        uses: actions/download-artifact@v4
        with:
          name: node-modules-${{ matrix.node-version }}
          path: react-frontend # Download to the react-frontend directory

      - name: Run linter
        run: npm run lint

  format_check:
    name: Format Check
    runs-on: ubuntu-latest
    needs: install_dependencies
    strategy:
      matrix:
        node-version: [20.x] # Should match install_dependencies
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: react-frontend/package-lock.json

      - name: Download node_modules
        uses: actions/download-artifact@v4
        with:
          name: node-modules-${{ matrix.node-version }}
          path: react-frontend # Download to the react-frontend directory

      - name: Check formatting
        run: npm run format -- --check

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, format_check] # These jobs already depend on install_dependencies
    strategy:
      matrix:
        node-version: [20.x] # Should match install_dependencies
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: react-frontend/package-lock.json

      - name: Download node_modules
        uses: actions/download-artifact@v4
        with:
          name: node-modules-${{ matrix.node-version }}
          path: react-frontend # Download to the react-frontend directory

      - name: Build project
        run: npm run build
