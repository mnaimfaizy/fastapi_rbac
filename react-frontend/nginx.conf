# Set worker processes to auto for better resource utilization
worker_processes auto;

# Error log path must be writable by nginx user
error_log /tmp/nginx/log/error.log warn;
pid /tmp/nginx/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    # Set paths for nginx temporary files when running as non-root
    client_body_temp_path /tmp/nginx/client_temp;
    proxy_temp_path /tmp/nginx/proxy_temp;
    fastcgi_temp_path /tmp/nginx/fastcgi_temp;
    uwsgi_temp_path /tmp/nginx/uwsgi_temp;
    scgi_temp_path /tmp/nginx/scgi_temp;
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
      # Logging settings
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /tmp/nginx/log/access.log main;

    # Enable gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript application/xml;
    gzip_min_length 1000;    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;

    # Define upstream backend servers
    upstream backend_servers {
        server fastapi_rbac:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # Disable server tokens
        server_tokens off;

        # Security headers - applied consistently with 'always' directive
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' http://fastapi_rbac:8000;" always;        # Support for HTML5 history API for SPA routes
        location / {
            try_files $uri $uri/ /index.html;
            expires 1h;
            add_header Cache-Control "public, no-transform" always;
        }

        # Proxy API requests to the backend
        location /api/ {
            proxy_pass http://backend_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Add proxy timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Add CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        }

        # Deny access to . files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}
